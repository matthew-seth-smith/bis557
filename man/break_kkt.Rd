% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/break-kkt.R
\name{break_kkt}
\alias{break_kkt}
\title{Test where the KKT Conditions are Broken}
\usage{
break_kkt(b, X, y, lambda)
}
\arguments{
\item{b}{the coefficient vector to check}

\item{X}{the data matrix for the LASSO regression, assumed to be standardized (mean 0 and variance 1 for each column) prior. We also assume there is no intercept column}

\item{y}{the vector of responses, which we assume has also had the mean subtracted}

\item{lambda}{the LASSO penalty constant (we assume there is no ridge regression component in this elastic net)}
}
\value{
A logical vector of the same length as `b` that says whether each coefficient breaks the KKT Conditions
}
\description{
This function returns a logical vector of the same length as the coefficient vector that says where the Karush-Kuhn-Tucker (KKT) Conditions are broken.
}
\examples{
X <- scale(model.matrix(Sepal.Length ~ . -1, iris))
y <- iris$Sepal.Length - mean(iris$Sepal.Length)
fit <- glmnet::cv.glmnet(X, y, standardize=FALSE, intercept = FALSE)
plot(fit) #Get an estimate for the optimal lambda
# We will use the largest lambda value that is within one standard deviation of the lambda that gives the minimum MSE
lambda <- fit$lambda.1se
b <- fit$glmnet.fit$beta[,fit$lambda == lambda]
break_kkt(b, X, y, lambda)
}
